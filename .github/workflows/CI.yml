name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                version:
                    - "1.10"
                    - "1.12"
                    - "nightly"
                os:
                    - ubuntu-latest
                    # - windows-latest
                    # - macos-latest
                arch:
                    - x64
        steps:
            - uses: actions/checkout@v4
            - uses: julia-actions/setup-julia@v1
              with:
                  version: ${{ matrix.version }}
                  arch: ${{ matrix.arch }}
            - uses: julia-actions/cache@v1
            - name: Install dependencies
              run: julia --project=@. -e 'using Pkg; Pkg.instantiate()'
            - name: Run tests
              run: julia --project=@. -e 'using Pkg; Pkg.test()'

    test-coverage:
        name: Coverage
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: julia-actions/setup-julia@v1
              with:
                  version: "1.9"
            - uses: julia-actions/cache@v1
            - name: Install dependencies
              run: julia --project=@. -e 'using Pkg; Pkg.instantiate()'
            - name: Run tests with coverage
              run: julia --project=@. -e 'using Pkg; Pkg.test(coverage=true)'
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./lcov.info
                  fail_ci_if_error: false

    docs:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: julia-actions/setup-julia@v1
              with:
                  version: "1.12"
            - uses: julia-actions/cache@v1
            - name: Install dependencies
              run: julia --project=docs -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
            - name: Build documentation
              run: julia --project=docs docs/make.jl
            - name: Deploy documentation
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: julia --project=docs docs/make.jl
            - name: Upload documentation artifacts
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: pkg-docs
                  path: docs/build/
